


ARM Macro Assembler    Page 1 


    1 00000000         ; ECE-222 Lab ... Winter 2013 term 
    2 00000000         ; Lab 3 sample code 
    3 00000000                 THUMB                        ; Thumb instruction
                                                             set 
    4 00000000                 AREA             My_code, CODE, READONLY
    5 00000000                 EXPORT           __MAIN
    6 00000000                 ENTRY
    7 00000000         __MAIN
    8 00000000         
    9 00000000         ; The following lines are similar to Lab-1 but use a def
                       ined address to make it easier.
   10 00000000         ; They just turn off all LEDs 
   11 00000000 F8DF A114       LDR              R10, =LED_BASE_ADR ; R10 is a p
                                                            ermenant pointer to
                                                             the base address f
                                                            or the LEDs, offset
                                                             of 0x20 and 0x40 f
                                                            or the ports
   12 00000004         
   13 00000004         
   14 00000004         ; FIO1CLR - 0x2009 C03C
   15 00000004         ; FIO2CLR - 0x2009 C05C
   16 00000004         
   17 00000004         ; FIO1SET - 0x2009 C038
   18 00000004         ; FIO2SET - 0x2009 C058
   19 00000004         
   20 00000004         ; This line is very important in your main program
   21 00000004         ; Initializes R11 to a 16-bit non-zero value and NOTHING
                        else can write to R11 !!
   22 00000004         
   23 00000004 F64A 3BCD       MOV              R11, #0xABCD ; Init the random 
                                                            number generator wi
                                                            th a non-zero numbe
                                                            r
   24 00000008         
   25 00000008         loop
   26 00000008         ; this is the main loop
   27 00000008 F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre
                                                            e LEDs on port 1  
   28 0000000C F8CA 3020       STR              R3, [R10, #0x20]
   29 00000010 F04F 037C       MOV              R3, #0x0000007C
   30 00000014 F8CA 3040       STR              R3, [R10, #0x40] ; Turn off fiv
                                                            e LEDs on port 2
   31 00000018         
   32 00000018 F000 F857       BL               RandomNum
   33 0000001C 4658            MOV              R0, R11
   34 0000001E F36F 401F       BFC              R0, #16, #16
   35 00000022         
   36 00000022         ; given that the number we are receiving is between 1 an
                       d 65535, to achieve range of 20,000 to 100,000
   37 00000022         ; offset by 20,000 and then find the ratio of 65545 to 1
                       00,000 - 20,000 = 80,000
   38 00000022         ; the ratio is approximately 16 / 13
   39 00000022         
   40 00000022 F04F 0310       MOV              R3, #16
   41 00000026 FB00 F003       MUL              R0, R0, R3
   42 0000002A F04F 030D       MOV              R3, #13
   43 0000002E FBB0 F0F3       UDIV             R0, R0, R3
   44 00000032 F644 6120       MOV              R1, #0x4e20



ARM Macro Assembler    Page 2 


   45 00000036 4408            ADD              R0, R1
   46 00000038         
   47 00000038 F000 F863       BL               DELAY       ; branch to delay f
                                                            or random time of 2
                                                             to 10 seconds
   48 0000003C         
   49 0000003C F04F 5300       MOV              R3, #0x20000000 ; initialize bi
                                                            t 29 for setting
   50 00000040 F8CA 3038       STR              R3, [R10, #0x38] 
                                                            ; turn the LED on
   51 00000044         
   52 00000044 F04F 0900       MOV              R9, #0      ; holds the number 
                                                            of iterations of 10
                                                            0us before user pre
                                                            sses the button
   53 00000048 4E34            LDR              R6, =FIO2PIN ; use FIO2PIN sinc
                                                            e we are at p2.10 f
                                                            or pin 2
   54 0000004A         
   55 0000004A         POLL
   56 0000004A 6837            LDR              R7, [R6]    ; load value of inp
                                                            ut pin
   57 0000004C F407 6780       AND              R7, #0X0400
   58 00000050 2F00            CMP              R7, #0      ; AND the 10th bit 
                                                            to see if there was
                                                             a value
   59 00000052 D006            BEQ              DISPLAY     ; branch to DISPLAY
                                                            _NUM if it is set
   60 00000054         
   61 00000054 F109 0901       ADD              R9, #1      ; ADD 1 to the numb
                                                            er of iterations
   62 00000058 F04F 0001       MOV              R0, #1
   63 0000005C F000 F851       BL               DELAY       ; run the delay for
                                                             100us
   64 00000060 E7F3            B                POLL
   65 00000062         
   66 00000062         DISPLAY
   67 00000062 464D            MOV              R5, R9
   68 00000064 F04F 0804       MOV              R8, #4
   69 00000068         
   70 00000068         DISPLAY_LOOP
   71 00000068 F000 F806       BL               DISPLAY_NUM
   72 0000006C EA4F 2515       LSR              R5, #8
   73 00000070 F1B8 0801       SUBS             R8, #1
   74 00000074 D1F8            BNE              DISPLAY_LOOP
   75 00000076         
   76 00000076 E7F4            B                DISPLAY
   77 00000078         
   78 00000078         ;
   79 00000078         ; Display the number in R3 onto the 8 LEDs
   80 00000078         ; Usefull commaands:  RBIT (reverse bits), BFC (bit fiel
                       d clear), LSR & LSL to shift bits left and right, ORR & 
                       AND and EOR for bitwise operations
   81 00000078         
   82 00000078 B506    DISPLAY_NUM
                               STMFD            R13!,{R1, R2, R14}
   83 0000007A         
   84 0000007A         ;turn off all the LEDS
   85 0000007A F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre



ARM Macro Assembler    Page 3 


                                                            e LEDs on port 1  
   86 0000007E F8CA 303C       STR              R3, [R10, #0x3C]
   87 00000082 F04F 037C       MOV              R3, #0x0000007C
   88 00000086 F8CA 305C       STR              R3, [R10, #0x5C] ; Turn off fiv
                                                            e LEDs on port 2 
   89 0000008A         
   90 0000008A F04F 0300       MOV              R3, #0      ; clears R3 (where 
                                                            we will store bits)
                                                            
   91 0000008E F365 635D       BFI              R3, R5, #25, #5 ; insert the fi
                                                            rst 5 bits of R7 in
                                                            to position 25 - 29
                                                             in R3
   92 00000092 FA93 F3A3       RBIT             R3, R3      ; reverse R3 such t
                                                            hat MSB become LSB 
                                                            -> position 2 - 6
   93 00000096 F36F 0301       BFC              R3, #0, #2
   94 0000009A F36F 13DF       BFC              R3, #7, #25 ; clear all other b
                                                            its in 32 bit range
                                                            
   95 0000009E         
   96 0000009E F8CA 3058       STR              R3, [R10, #0x58] ; turn on the 
                                                            LEDS on port 2
   97 000000A2         
   98 000000A2 F365 0348       BFI              R3, R5, #1, #8 ; insert 8 bits 
                                                            -> position 1 - 8
   99 000000A6 F365 0305       BFI              R3, R5, #0, #6 ; insert 6 bits 
                                                            -> position 0 - 5
  100 000000AA EA4F 1353       LSR              R3, #5      ; shift right to ge
                                                            t only 4 bits
  101 000000AE FA93 F3A3       RBIT             R3, R3      ; reverse R3 such t
                                                            hat LSB become MSB 
                                                            -> position 28 - 31
                                                            
  102 000000B2 F36F 739E       BFC              R3, #30, #1
  103 000000B6 F36F 031B       BFC              R3, #0, #28 ; ckear all other b
                                                            its in 32 bit range
                                                            
  104 000000BA F8CA 3038       STR              R3, [R10, #0x38] ; turn on the 
                                                            LEDS on port 1
  105 000000BE         
  106 000000BE F04F 0020       MOV              R0, #0x20   ; 20000 in hex, bec
                                                            ause we need to run
                                                             the delay for 2 se
                                                            conds
  107 000000C2 F000 F81E       BL               DELAY
  108 000000C6         
  109 000000C6 BD06            LDMFD            R13!,{R1, R2, R15}
  110 000000C8 4770            BX               LR
  111 000000CA         
  112 000000CA         ;
  113 000000CA         ; R11 holds a 16-bit random number via a pseudo-random s
                       equence as per the Linear feedback shift register (Fibon
                       acci) on WikiPedia
  114 000000CA         ; R11 holds a non-zero 16-bit number.  If a zero is fed 
                       in the pseudo-random sequence will stay stuck at 0
  115 000000CA         ; Take as many bits of R11 as you need.  If you take the
                        lowest 4 bits then you get a number between 1 and 15.
  116 000000CA         ;   If you take bits 5..1 you'll get a number between 0 



ARM Macro Assembler    Page 4 


                       and 15 (assuming you right shift by 1 bit).
  117 000000CA         ;
  118 000000CA         ; R11 MUST be initialized to a non-zero 16-bit value at 
                       the start of the program OR ELSE!
  119 000000CA         ; R11 can be read anywhere in the code but must only be 
                       written to by this subroutine
  120 000000CA B50E    RandomNum
                               STMFD            R13!,{R1, R2, R3, R14}
  121 000000CC         
  122 000000CC F40B 4100       AND              R1, R11, #0x8000
  123 000000D0 F40B 5200       AND              R2, R11, #0x2000
  124 000000D4 EA4F 0282       LSL              R2, #2
  125 000000D8 EA81 0302       EOR              R3, R1, R2
  126 000000DC F40B 5180       AND              R1, R11, #0x1000
  127 000000E0 EA4F 01C1       LSL              R1, #3
  128 000000E4 EA83 0301       EOR              R3, R3, R1
  129 000000E8 F40B 6180       AND              R1, R11, #0x0400
  130 000000EC EA4F 1141       LSL              R1, #5
  131 000000F0 EA83 0301       EOR              R3, R3, R1  ; the new bit to go
                                                             into the LSB is pr
                                                            esent
  132 000000F4 EA4F 33D3       LSR              R3, #15
  133 000000F8 EA4F 0B4B       LSL              R11, #1
  134 000000FC EA4B 0B03       ORR              R11, R11, R3
  135 00000100         
  136 00000100 BD0E            LDMFD            R13!,{R1, R2, R3, R15}
  137 00000102         
  138 00000102         ;
  139 00000102         ;  Delay 0.1ms (100us) * R0 times
  140 00000102         ;   aim for better than 10% accuracy
  141 00000102         ;               The formula to determine the number of l
                       oop cycles is equal to Clock speed x Delay time / (#cloc
                       k cycles)
  142 00000102         ;               where clock speed = 4MHz and if you use 
                       the BNE or other conditional branch command, the #clock 
                       cycles =
  143 00000102         ;               2 if you take the branch, and 1 if you d
                       on't.
  144 00000102         
  145 00000102 B504    DELAY   STMFD            R13!,{R2, R14}
  146 00000104         
  147 00000104         ; code to generate a delay of 0.1mS * R0 times
  148 00000104         
  149 00000104 F090 0F00 
                       MultipleDelay
                               TEQ              R0, #0      ; setting the zero 
                                                            flag to test R0 to 
                                                            see if it's 0 
  150 00000108 D005            BEQ              exitDelay
  151 0000010A F04F 0285       MOV              R2,#0x85    ; variable for 100 
                                                            micro seconds; intr
                                                            oduce delay element
                                                             
  152 0000010E         delayloop
  153 0000010E 3A01            SUBS             R2,#1
  154 00000110 D1FD            BNE              delayloop
  155 00000112 1E40            SUBS             R0, R0, #1  ; reduce number of 
                                                            loop iterations
  156 00000114 D1F6            BNE              MultipleDelay



ARM Macro Assembler    Page 5 


  157 00000116         
  158 00000116 BD04    exitDelay
                               LDMFD            R13!,{R2, R15}
  159 00000118         
  160 00000118         
  161 00000118 2009C000 
                       LED_BASE_ADR
                               EQU              0x2009c000  ; Base address of t
                                                            he memory that cont
                                                            rols the LEDs 
  162 00000118 4002C00C 
                       PINSEL3 EQU              0x4002c00c  ; Address of Pin Se
                                                            lect Register 3 for
                                                             P1[31:16]
  163 00000118 4002C010 
                       PINSEL4 EQU              0x4002c010  ; Address of Pin Se
                                                            lect Register 4 for
                                                             P2[15:0]
  164 00000118 2009C054 
                       FIO2PIN EQU              0x2009c054  ; address of pin 2.
                                                            10 
  165 00000118         
  166 00000118         ; Usefull GPIO Registers
  167 00000118         ; FIODIR  - register to set individual pins as input or 
                       output
  168 00000118         ; FIOPIN  - register to read and write pins
  169 00000118         ; FIOSET  - register to set I/O pins to 1 by writing a 1
                       
  170 00000118         ; FIOCLR  - register to clr I/O pins to 0 by writing a 1
                       
  171 00000118         
  172 00000118                 ALIGN
  173 00000118         
  174 00000118                 END
              2009C000 
              2009C054 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\lab_3_program.d -o.\objects\lab_3_program.o -I.\RTE\_LPC
1768_FLASH -IC:\keil_v5\Arm\Pack\Keil\LPC1700_DFP\2.6.0\Device\Include -IC:\Kei
l_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 529" --predefine="LPC175x_6x SETA 1" --list=.\listings\lab_3_program.ls
t Lab_3_program.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DELAY 00000102

Symbol: DELAY
   Definitions
      At line 145 in file Lab_3_program.s
   Uses
      At line 47 in file Lab_3_program.s
      At line 63 in file Lab_3_program.s
      At line 107 in file Lab_3_program.s

DISPLAY 00000062

Symbol: DISPLAY
   Definitions
      At line 66 in file Lab_3_program.s
   Uses
      At line 59 in file Lab_3_program.s
      At line 76 in file Lab_3_program.s

DISPLAY_LOOP 00000068

Symbol: DISPLAY_LOOP
   Definitions
      At line 70 in file Lab_3_program.s
   Uses
      At line 74 in file Lab_3_program.s
Comment: DISPLAY_LOOP used once
DISPLAY_NUM 00000078

Symbol: DISPLAY_NUM
   Definitions
      At line 82 in file Lab_3_program.s
   Uses
      At line 71 in file Lab_3_program.s
Comment: DISPLAY_NUM used once
MultipleDelay 00000104

Symbol: MultipleDelay
   Definitions
      At line 149 in file Lab_3_program.s
   Uses
      At line 156 in file Lab_3_program.s
Comment: MultipleDelay used once
My_code 00000000

Symbol: My_code
   Definitions
      At line 4 in file Lab_3_program.s
   Uses
      None
Comment: My_code unused
POLL 0000004A

Symbol: POLL
   Definitions
      At line 55 in file Lab_3_program.s
   Uses
      At line 64 in file Lab_3_program.s
Comment: POLL used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

RandomNum 000000CA

Symbol: RandomNum
   Definitions
      At line 120 in file Lab_3_program.s
   Uses
      At line 32 in file Lab_3_program.s
Comment: RandomNum used once
__MAIN 00000000

Symbol: __MAIN
   Definitions
      At line 7 in file Lab_3_program.s
   Uses
      At line 5 in file Lab_3_program.s
Comment: __MAIN used once
delayloop 0000010E

Symbol: delayloop
   Definitions
      At line 152 in file Lab_3_program.s
   Uses
      At line 154 in file Lab_3_program.s
Comment: delayloop used once
exitDelay 00000116

Symbol: exitDelay
   Definitions
      At line 158 in file Lab_3_program.s
   Uses
      At line 150 in file Lab_3_program.s
Comment: exitDelay used once
loop 00000008

Symbol: loop
   Definitions
      At line 25 in file Lab_3_program.s
   Uses
      None
Comment: loop unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIO2PIN 2009C054

Symbol: FIO2PIN
   Definitions
      At line 164 in file Lab_3_program.s
   Uses
      At line 53 in file Lab_3_program.s
Comment: FIO2PIN used once
LED_BASE_ADR 2009C000

Symbol: LED_BASE_ADR
   Definitions
      At line 161 in file Lab_3_program.s
   Uses
      At line 11 in file Lab_3_program.s
Comment: LED_BASE_ADR used once
PINSEL3 4002C00C

Symbol: PINSEL3
   Definitions
      At line 162 in file Lab_3_program.s
   Uses
      None
Comment: PINSEL3 unused
PINSEL4 4002C010

Symbol: PINSEL4
   Definitions
      At line 163 in file Lab_3_program.s
   Uses
      None
Comment: PINSEL4 unused
4 symbols
351 symbols in table
